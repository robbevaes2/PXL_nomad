# -*- mode: ruby -*-
# vi: set ft=ruby :
VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vbguest.auto_update = false
  config.vm.box = "centos/7"

  config.vm.define :server do |server|
    server.vm.hostname = "server"
    server.vm.network "private_network", ip: "192.168.1.2", type: "static"
    server.vm.network "forwarded_port", guest: 4646, host: 4646, auto_correct: true, host_ip: "127.0.0.1"
    server.vm.network "forwarded_port", guest: 8500, host: 8500, auto_correct: true, host_ip: "127.0.0.1"
	
	server.vm.provision "ansible" do |ansible|
      ansible.config_file = "ansible/ansible.cfg"
      ansible.playbook = "ansible/plays/initial.yml"
      ansible.groups = {
        "servers" => ["server"]
      }
      ansible.host_vars = {
#        "server" => {"bind_address" => "\"192.168.1.2\""}
      }
      ansible.verbose = '-vvv'
    

 end
end

  config.vm.define :client1 do |client1|
    client1.vm.hostname = "client1"
	client1.vm.network "private_network", ip:"192.168.1.3", type: "static"
	
	client1.vm.provision "ansible" do |ansible|
      ansible.config_file = "ansible/ansible.cfg"
      ansible.playbook = "ansible/plays/initial.yml"
      ansible.groups = {
		"clients" => ["client1"],
#    "clients:vars" => {"retry_join" => "retry_join = [\"192.168.1.2\"]"} 
      }
      ansible.host_vars = {
#        "client1" => {"bind_address" => "\"192.168.1.3\""}
      }
      ansible.verbose = '-vvv'

 end
  end
  config.vm.define :client2 do |client2|
    client2.vm.hostname = "client2"
	client2.vm.network "private_network", ip:"192.168.1.4", type: "static"
	
	client2.vm.provision "ansible" do |ansible|
      ansible.config_file = "ansible/ansible.cfg"
      ansible.playbook = "ansible/plays/initial.yml"
      ansible.groups = {
		"clients" => ["client2"],
#    "clients:vars" => {"retry_join" => "retry_join = [\"192.168.1.2\"]"} 
      }
      ansible.host_vars = {
#        "client2" => {"bind_address" => "\"192.168.1.4\""}
      }
      ansible.verbose = '-vvv'

 end
  end
end
